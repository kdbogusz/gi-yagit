<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classyagit_1_1core_1_1data_1_1irtdose__image__region" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>yagit::core::data::irtdose_image_region</compoundname>
    <basecompoundref refid="classyagit_1_1core_1_1data_1_1iimage__region" prot="public" virt="virtual">yagit::core::data::iimage_region&lt; ElementType, Dimensions &gt;</basecompoundref>
    <derivedcompoundref refid="classyagit_1_1core_1_1data_1_1irtdose__image" prot="public" virt="virtual">yagit::core::data::irtdose_image&lt; ElementType, Dimensions &gt;</derivedcompoundref>
    <includes local="no">irtdose_image_region.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ElementType</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>Dimensions</declname>
        <defname>Dimensions</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1ac62350a849ea3226b14acfe6fe88b65b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::~irtdose_image_region</definition>
        <argsstring>()=default</argsstring>
        <name>~irtdose_image_region</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1ab1f798276c8fc2fb50ab9ed1ca592421" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimension</declname>
            <defname>Dimension</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt;</type>
        <definition>data_format&lt;Dimensions&gt; yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::preferred_coordinates_format</definition>
        <argsstring>() const</argsstring>
        <name>preferred_coordinates_format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Preferred implementation format to load the data point coordinates</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="25" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1a8e5146db73a7b92f49ade7c2b6694f1e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unique_ptr&lt; <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; ElementType, Dimensions &gt; &gt;</type>
        <definition>unique_ptr&lt;irtdose_image_region&lt;ElementType, Dimensions&gt; &gt; yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::subregion</definition>
        <argsstring>(const data_region&lt; Dimensions &gt; &amp;region, error_code &amp;ec) const</argsstring>
        <name>subregion</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type>error_code &amp;</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtains an <ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref> corresponding to provided subregion.</para><para>Provided subregion should be interpreted locally i.e subregion is a subregion of <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref> not whole image subregion</para><para>Can return null in four cases:</para><para>- provided region is bigger (in size) than <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref> </para><para>- provided region&apos;s offset is outside <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref> </para><para>- provided region is invalid i.e one of subregion sizes is 0</para><para>- implementation doesn&apos;t allow for taking subregions of this <ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>region</parametername>
</parameternamelist>
<parameterdescription>
<para>Subregion relative to <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ec</parametername>
</parameternamelist>
<parameterdescription>
<para>Error code</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref> containing subregion defined by region</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="43" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1adc4ec74b7fc6e40b59c98a4234bc774a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unique_ptr&lt; <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; ElementType, Dimensions &gt; &gt;</type>
        <definition>unique_ptr&lt;irtdose_image_region&lt;ElementType, Dimensions&gt; &gt; yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::subregion</definition>
        <argsstring>(const data_region&lt; Dimensions &gt; &amp;region) const</argsstring>
        <name>subregion</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="47" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1addeba8aec2101281feec3c0f08531444" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimension</declname>
            <defname>Dimension</defname>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;ElementType&gt;</defval>
          </param>
        </templateparamlist>
        <type>optional&lt; <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; ElementType, Dimensions &gt; &gt;</type>
        <definition>optional&lt;image_coordinates&lt;ElementType, Dimensions&gt; &gt; yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::load_coordinates</definition>
        <argsstring>(const data_format&lt; Dimensions &gt; &amp;format, Allocator allocator, error_code &amp;ec) const</argsstring>
        <name>load_coordinates</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
        </param>
        <param>
          <type>error_code &amp;</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads <ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref> image data point coordinates into memory buffer (<ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>)</para><para><ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref> data point coordinats should be in the same order as corresponding data points</para><para>obtained by <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a8373fb474ffb60815265fdb477e1ed79" kindref="member">iimage_region::load</ref> provided they were obtained with the same <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref></para><para>TODO: describe and implement reasonable exception-less error handling</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocator type to use for data storage allocation</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>: Data format in which data point coordinates should be loaded</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>: Allocator to use for data storage allocation</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ec</parametername>
</parameternamelist>
<parameterdescription>
<para>Error code</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Loaded image data point coordinates into memory buffer (<ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>)</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="70" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" bodystart="70" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1a7ac0d52e12c5b5a0e22c8d30e3d81148" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimension</declname>
            <defname>Dimension</defname>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;ElementType&gt;</defval>
          </param>
        </templateparamlist>
        <type>optional&lt; <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; ElementType, Dimensions &gt; &gt;</type>
        <definition>optional&lt;image_coordinates&lt;ElementType, Dimensions&gt; &gt; yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::load_coordinates</definition>
        <argsstring>(const data_format&lt; Dimensions &gt; &amp;format, Allocator allocator) const</argsstring>
        <name>load_coordinates</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="85" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" bodystart="85" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1a4b7ce3361db1f609ed451937270ed54d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt;</type>
        <definition>virtual data_format&lt;Dimensions&gt; yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::preferred_coordinates_format</definition>
        <argsstring>(size_t dimension) const =0</argsstring>
        <name>preferred_coordinates_format</name>
        <param>
          <type>size_t</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Preferred implementation format to load the data point coordinates</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1ac7e49318d3150251d8f9eb6721c4b9fe" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>error_code</type>
        <definition>virtual error_code yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::load_coordinates</definition>
        <argsstring>(ElementType *data_storage, size_t dimension, const data_format&lt; Dimensions &gt; &amp;format, size_t &amp;required_size) const =0</argsstring>
        <name>load_coordinates</name>
        <param>
          <type>ElementType *</type>
          <declname>data_storage</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dimension</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>required_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implementable method responsible for data point coordinates loading</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_storage</parametername>
</parameternamelist>
<parameterdescription>
<para>: Pointer to contiguous memory block to which data point coordinates should be loaded.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>: Format in which data point coordinates should be loaded. If data_storage is nullptr, this is argument is ignored.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>required_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: returns required size for data point coordinates loading imposed by implementation must be greater of equal to regular C array of type ElementType of size required to fit all data points in <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref>. If data_storage is nullptr, this argument returns implementation based required data points storage size. Else is treated as an input informing about size of allocated storage, handling as input is implementation defined. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error code informing about error that occured during execution unless success</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1irtdose__image__region_1ac855d305661842317fc92fbda6578480" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; ElementType, Dimensions &gt; *</type>
        <definition>virtual irtdose_image_region&lt;ElementType, Dimensions&gt;* yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;::create_subregion</definition>
        <argsstring>(const data_region&lt; Dimensions &gt; &amp;region, error_code &amp;ec) const =0</argsstring>
        <name>create_subregion</name>
        <reimplements refid="classyagit_1_1core_1_1data_1_1iimage__region_1ab5b92777c5a201aa2d644e8e81d687a4">create_subregion</reimplements>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type>error_code &amp;</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtains an <ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref> corresponding to provided subregion.</para><para>Provided subregion should be interpreted locally i.e subregion is a subregion of <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref> not whole image subregion</para><para>Can return null in four cases:</para><para>- provided region is bigger (in size) than <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref> </para><para>- provided region&apos;s offset is outside <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref> </para><para>- provided region is invalid i.e one of subregion sizes is 0</para><para>- implementation doesn&apos;t allow for taking subregions of this <ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>region</parametername>
</parameternamelist>
<parameterdescription>
<para>Subregion relative to <ref refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" kindref="member">region()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ec</parametername>
</parameternamelist>
<parameterdescription>
<para>Error code</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>transfers ownership of <ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref> containing subregion defined by region</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="122" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface extending <ref refid="classyagit_1_1core_1_1data_1_1iimage__region" kindref="compound">iimage_region</ref> functionality. Represents region of RTDOSE dicom image. </para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ElementType</parametername>
</parameternamelist>
<parameterdescription>
<para>Data point element type</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Dimensions</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimensionality of image data point storage</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="128">
        <label>yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;</label>
        <link refid="classyagit_1_1core_1_1data_1_1irtdose__image__region"/>
        <childnode refid="129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>yagit::core::data::iimage_region&lt; ElementType, Dimensions &gt;</label>
        <link refid="classyagit_1_1core_1_1data_1_1iimage__region"/>
      </node>
      <node id="130">
        <label>yagit::core::data::irtdose_image&lt; ElementType, Dimensions &gt;</label>
        <link refid="classyagit_1_1core_1_1data_1_1irtdose__image"/>
        <childnode refid="128" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="131">
        <label>yagit::core::data::irtdose_image_region&lt; ElementType, Dimensions &gt;</label>
        <link refid="classyagit_1_1core_1_1data_1_1irtdose__image__region"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="132">
        <label>yagit::core::data::iimage_region&lt; ElementType, Dimensions &gt;</label>
        <link refid="classyagit_1_1core_1_1data_1_1iimage__region"/>
      </node>
    </collaborationgraph>
    <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" line="18" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/irtdose_image_region.hpp" bodystart="16" bodyend="123"/>
    <listofallmembers>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1a435b45bc06115a45e272af7a655556cc" prot="protected" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>allocate_at_least_for_image_data</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1ac855d305661842317fc92fbda6578480" prot="protected" virt="pure-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>create_subregion</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1a8373fb474ffb60815265fdb477e1ed79" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>load</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1a931e544c67357bfbe36af6f73b58328e" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>load</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1af7f747edd5681de4588f1a81e6596749" prot="protected" virt="pure-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>load</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1addeba8aec2101281feec3c0f08531444" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>load_coordinates</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1a7ac0d52e12c5b5a0e22c8d30e3d81148" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>load_coordinates</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1ac7e49318d3150251d8f9eb6721c4b9fe" prot="protected" virt="pure-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>load_coordinates</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1ab1f798276c8fc2fb50ab9ed1ca592421" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>preferred_coordinates_format</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1a4b7ce3361db1f609ed451937270ed54d" prot="protected" virt="pure-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>preferred_coordinates_format</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1a5edf59e72af5e2a0573592b4b6b93317" prot="public" virt="pure-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>preferred_data_format</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1a4304c108144ba8d633a2509828b1307d" prot="public" virt="pure-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>region</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1abed1b3b06d1e677cb15be8613eeb2213" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>slice</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1a24539a2dd775ffad080b91781cacc63f" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>slice</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1ab035f6185847a9528001ecd72277b82e" prot="protected" virt="pure-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>slice</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1a8e5146db73a7b92f49ade7c2b6694f1e" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>subregion</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1adc4ec74b7fc6e40b59c98a4234bc774a" prot="public" virt="non-virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>subregion</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1iimage__region_1a9d37f613f04dc4183fc6d891ba71cb22" prot="public" virt="virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>~iimage_region</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1irtdose__image__region_1ac62350a849ea3226b14acfe6fe88b65b" prot="public" virt="virtual"><scope>yagit::core::data::irtdose_image_region</scope><name>~irtdose_image_region</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
