<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4" kind="class" language="C++" prot="public">
    <compoundname>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a392ec48646dd21b34ee0aadebf5cb4cc" prot="public" static="no">
        <type>double</type>
        <definition>using yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::value_type =  double</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="57" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a532b2c867895e801123f12d378280fae" prot="public" static="no">
        <type>size_t</type>
        <definition>using yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="58" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a6cd8945e99bb68f2a9b7f7f413865706" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>using yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::difference_type =  ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="59" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a6d09d1b494f5a816d183de8a6ecf8dcb" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::propagate_on_container_move_assignment =  std::true_type</definition>
        <argsstring></argsstring>
        <name>propagate_on_container_move_assignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="60" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a119a9707fb13e6f5cb4822a98ff7baaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::fast_float_aligned_allocator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>fast_float_aligned_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1add9be3e5885f7db9e69e6a33a3db3dc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::fast_float_aligned_allocator</definition>
        <argsstring>(const fast_float_aligned_allocator &amp;other) noexcept=default</argsstring>
        <name>fast_float_aligned_allocator</name>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" kindref="compound">fast_float_aligned_allocator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a1261fb4a93a105e56e6e1c2dbdac09a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::fast_float_aligned_allocator</definition>
        <argsstring>(fast_float_aligned_allocator &amp;&amp;other) noexcept=default</argsstring>
        <name>fast_float_aligned_allocator</name>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" kindref="compound">fast_float_aligned_allocator</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a8c3ad84a932bee3e033514c8311e6bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" kindref="compound">fast_float_aligned_allocator</ref> &amp;</type>
        <definition>constexpr fast_float_aligned_allocator&amp; yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::operator=</definition>
        <argsstring>(const fast_float_aligned_allocator &amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" kindref="compound">fast_float_aligned_allocator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1aaaa0f878a5586f7dc1be67563835b1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" kindref="compound">fast_float_aligned_allocator</ref> &amp;</type>
        <definition>constexpr fast_float_aligned_allocator&amp; yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::operator=</definition>
        <argsstring>(fast_float_aligned_allocator &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" kindref="compound">fast_float_aligned_allocator</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a9fa8acab20b28d5271bdf4685dc89556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::~fast_float_aligned_allocator</definition>
        <argsstring>()=default</argsstring>
        <name>~fast_float_aligned_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1acb16cf5847904d9128bbce0efb1d5bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>value_type *</type>
        <definition>double * yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::allocate</definition>
        <argsstring>(size_type n)</argsstring>
        <name>allocate</name>
        <param>
          <type>size_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="71" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1ac049eed8ca75daab083a11f05014fd45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>allocation_result&lt; value_type * &gt;</type>
        <definition>allocation_result&lt; double * &gt; yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::allocate_at_least</definition>
        <argsstring>(size_type n)</argsstring>
        <name>allocate_at_least</name>
        <param>
          <type>size_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="72" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1adc405f3c387ed5bfa3194d42567227d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::deallocate</definition>
        <argsstring>(value_type *p, size_type n)</argsstring>
        <name>deallocate</name>
        <param>
          <type>value_type *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="73" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1ad942844f1fb5021f073e8da90213b6ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::operator==</definition>
        <argsstring>(const fast_float_aligned_allocator &amp;other)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" kindref="compound">fast_float_aligned_allocator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="75" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a4345e48407d131953db6742096d2704a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::fast_float_aligned_allocator&lt; double &gt;::operator!=</definition>
        <argsstring>(const fast_float_aligned_allocator &amp;other)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" kindref="compound">fast_float_aligned_allocator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="79" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" bodystart="79" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" line="55" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/data/allocation/fast_float_aligned_allocator.hpp" bodystart="54" bodyend="83"/>
    <listofallmembers>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1acb16cf5847904d9128bbce0efb1d5bb7" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>allocate</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1ac049eed8ca75daab083a11f05014fd45" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>allocate_at_least</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1adc405f3c387ed5bfa3194d42567227d0" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>deallocate</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a6cd8945e99bb68f2a9b7f7f413865706" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>difference_type</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a119a9707fb13e6f5cb4822a98ff7baaa" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>fast_float_aligned_allocator</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1add9be3e5885f7db9e69e6a33a3db3dc4" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>fast_float_aligned_allocator</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a1261fb4a93a105e56e6e1c2dbdac09a8" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>fast_float_aligned_allocator</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a4345e48407d131953db6742096d2704a" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>operator!=</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a8c3ad84a932bee3e033514c8311e6bdc" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>operator=</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1aaaa0f878a5586f7dc1be67563835b1f2" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>operator=</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1ad942844f1fb5021f073e8da90213b6ac" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>operator==</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a6d09d1b494f5a816d183de8a6ecf8dcb" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>propagate_on_container_move_assignment</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a532b2c867895e801123f12d378280fae" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>size_type</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a392ec48646dd21b34ee0aadebf5cb4cc" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>value_type</name></member>
      <member refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4_1a9fa8acab20b28d5271bdf4685dc89556" prot="public" virt="non-virtual"><scope>yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</scope><name>~fast_float_aligned_allocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
