<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceyagit_1_1core_1_1data_1_1detail" kind="namespace" language="C++">
    <compoundname>yagit::core::data::detail</compoundname>
    <innerclass refid="structyagit_1_1core_1_1data_1_1detail_1_1aligned__block" prot="public">yagit::core::data::detail::aligned_block</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1detail_1_1has__allocate__at__least__method" prot="public">yagit::core::data::detail::has_allocate_at_least_method</innerclass>
    <innernamespace refid="namespaceyagit_1_1core_1_1data_1_1detail_1_1_s_i_m_d_p_p___a_r_c_h___n_a_m_e_s_p_a_c_e">yagit::core::data::detail::SIMDPP_ARCH_NAMESPACE</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="common_8hpp_1ae73299fe75c4d3eec4f53a3789a1ff8b" prot="public" static="no" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::detail::allocate_at_least_is_standard</definition>
        <argsstring></argsstring>
        <name>allocate_at_least_is_standard</name>
        <initializer>= __cplusplus &gt; 202002L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="74" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="common_8hpp_1aaf3c552789886ce3fe135932f59b6180" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::detail::is_power_of_two_v</definition>
        <argsstring></argsstring>
        <name>is_power_of_two_v</name>
        <initializer>= N != 0 &amp;&amp; !(N &amp; (N - 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="77" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="common_8hpp_1a2d1f170b2613157fe14e9d02175438be" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename PointerType</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::detail::has_allocate_at_least_method_v</definition>
        <argsstring></argsstring>
        <name>has_allocate_at_least_method_v</name>
        <initializer>= has_allocate_at_least_method&lt;Type, PointerType&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="95" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8cpp_1aeb6b275dbb81719cf1ebc1ec4dd609d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>yagit::core::data::detail::SIMDPP_MAKE_DISPATCHER</definition>
        <argsstring>((float *)(allocate_float32)((size_t) n))</argsstring>
        <name>SIMDPP_MAKE_DISPATCHER</name>
        <param>
          <type>(float *)(allocate_float32)((size_t) n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8cpp_1a6a3216cf55c88d05d446e4094257a97e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>yagit::core::data::detail::SIMDPP_MAKE_DISPATCHER</definition>
        <argsstring>((allocation_result&lt; float *&gt;)(allocate_at_least_float32)((size_t) n))</argsstring>
        <name>SIMDPP_MAKE_DISPATCHER</name>
        <param>
          <type>(allocation_result&lt; float * &gt;)(allocate_at_least_float32)((size_t) n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8cpp_1a1b1087e6b753f30b485c261fc95d7277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>yagit::core::data::detail::SIMDPP_MAKE_DISPATCHER</definition>
        <argsstring>((void)(deallocate_float32)((float *) p,(size_t) n))</argsstring>
        <name>SIMDPP_MAKE_DISPATCHER</name>
        <param>
          <type>(void)(deallocate_float32)((float *) p,(size_t) n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8cpp_1a08e1967b6961a743321ce915d01fffb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>yagit::core::data::detail::SIMDPP_MAKE_DISPATCHER</definition>
        <argsstring>((double *)(allocate_float64)((size_t) n))</argsstring>
        <name>SIMDPP_MAKE_DISPATCHER</name>
        <param>
          <type>(double *)(allocate_float64)((size_t) n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8cpp_1afaa52771f0d5a9f3d1a0011eced21f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>yagit::core::data::detail::SIMDPP_MAKE_DISPATCHER</definition>
        <argsstring>((allocation_result&lt; double *&gt;)(allocate_at_least_float64)((size_t) n))</argsstring>
        <name>SIMDPP_MAKE_DISPATCHER</name>
        <param>
          <type>(allocation_result&lt; double * &gt;)(allocate_at_least_float64)((size_t) n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8cpp_1a8896201c0ebca1054f6be1a67be6e0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>yagit::core::data::detail::SIMDPP_MAKE_DISPATCHER</definition>
        <argsstring>((void)(deallocate_float64)((double *) p,(size_t) n))</argsstring>
        <name>SIMDPP_MAKE_DISPATCHER</name>
        <param>
          <type>(void)(deallocate_float64)((double *) p,(size_t) n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1a852aab550e35b77c7127505e8e5a3f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr array&lt; order_element_t, Dimensions &gt;</type>
        <definition>constexpr array&lt;order_element_t, Dimensions&gt; yagit::core::data::detail::make_default_order</definition>
        <argsstring>(index_sequence&lt; I... &gt;)</argsstring>
        <name>make_default_order</name>
        <param>
          <type>index_sequence&lt; I... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="207" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8hpp_1ab8feeb90c4bbe9204ef5a1840312d9f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* yagit::core::data::detail::allocate_float32</definition>
        <argsstring>(size_t n)</argsstring>
        <name>allocate_float32</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator_impl.hpp" line="9" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8hpp_1ad76aae8193a12c21191d3fb3055d1dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>allocation_result&lt; float * &gt;</type>
        <definition>allocation_result&lt;float*&gt; yagit::core::data::detail::allocate_at_least_float32</definition>
        <argsstring>(size_t n)</argsstring>
        <name>allocate_at_least_float32</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator_impl.hpp" line="10" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8hpp_1a8b2c828dab5b3d0b5a8a8b04c008ebfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void yagit::core::data::detail::deallocate_float32</definition>
        <argsstring>(float *p, size_t n)</argsstring>
        <name>deallocate_float32</name>
        <param>
          <type>float *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator_impl.hpp" line="11" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8hpp_1a1a579bda8cff4fb1323081563957d433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double* yagit::core::data::detail::allocate_float64</definition>
        <argsstring>(size_t n)</argsstring>
        <name>allocate_float64</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator_impl.hpp" line="15" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8hpp_1a82fdbce3555ef4612d2eec1510782b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>allocation_result&lt; double * &gt;</type>
        <definition>allocation_result&lt;double*&gt; yagit::core::data::detail::allocate_at_least_float64</definition>
        <argsstring>(size_t n)</argsstring>
        <name>allocate_at_least_float64</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator_impl.hpp" line="16" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="fast__float__aligned__allocator__impl_8hpp_1aaa8bcd70a4e8fcabf9348031b158fdcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void yagit::core::data::detail::deallocate_float64</definition>
        <argsstring>(double *p, size_t n)</argsstring>
        <name>deallocate_float64</name>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/src/data/allocation/fast_float_aligned_allocator_impl.hpp" line="17" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/gi-yagit/gi-yagit/gi_core/dispatch/data/allocation/fast_float_aligned_allocator_impl.cpp" line="15" column="1"/>
  </compounddef>
</doxygen>
