<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceyagit_1_1core" kind="namespace" language="C++">
    <compoundname>yagit::core</compoundname>
    <innernamespace refid="namespaceyagit_1_1core_1_1data">yagit::core::data</innernamespace>
    <innernamespace refid="namespaceyagit_1_1core_1_1math">yagit::core::math</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="common_8hpp_1ac2a64ceea30c13d5159859870fd26c78" prot="public" static="no">
        <type>std::size_t</type>
        <definition>typedef std::size_t yagit::core::size_t</definition>
        <argsstring></argsstring>
        <name>size_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="20" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="common_8hpp_1a60027985f34c88fbdd7319f3aed182ad" prot="public" static="no">
        <type>T *</type>
        <definition>using yagit::core::view = typedef T*</definition>
        <argsstring></argsstring>
        <name>view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="40" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="common_8hpp_1af3af7e960048db075ff8efc9d24d88a1" prot="public" static="no">
        <type>const T *</type>
        <definition>using yagit::core::const_view = typedef const T*</definition>
        <argsstring></argsstring>
        <name>const_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="43" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a0e7b5d4296db458ea1eaaea7134befed" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using yagit::core::ptrdiff_t = typedef std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>ptrdiff_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/definitions.hpp" line="9" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/definitions.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="common_8hpp_1a9c95f5829f8a297f4dbc3d2c004bf6d4" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::is_power_of_two_v</definition>
        <argsstring></argsstring>
        <name>is_power_of_two_v</name>
        <initializer>= N &amp;&amp; !(N &amp; (N - 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="47" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="common_8hpp_1a734492535a1e1941024815f6fc0a7c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>ByteCount</declname>
            <defname>ByteCount</defname>
          </param>
          <param>
            <type>typename ElementType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;is_power_of_two_v&lt;ByteCount&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool yagit::core::is_aligned_to_bytes</definition>
        <argsstring>(const_view&lt; ElementType &gt; ptr)</argsstring>
        <name>is_aligned_to_bytes</name>
        <param>
          <type>const_view&lt; ElementType &gt;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="50" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1a9890fb5059184b7bda1f057bfef0ff0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>ElementCount</declname>
            <defname>ElementCount</defname>
          </param>
          <param>
            <type>typename ElementType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;is_power_of_two_v&lt;ElementCount&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool yagit::core::is_aligned_to</definition>
        <argsstring>(const_view&lt; ElementType &gt; ptr)</argsstring>
        <name>is_aligned_to</name>
        <param>
          <type>const_view&lt; ElementType &gt;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="56" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef>
</doxygen>
