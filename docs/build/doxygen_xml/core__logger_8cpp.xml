<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="core__logger_8cpp" kind="file" language="C++">
    <compoundname>core_logger.cpp</compoundname>
    <includes refid="core__logger_8h" local="yes">core_logger.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">ctime</includes>
    <includes local="no">fstream</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="50">
        <label>core_logger.h</label>
        <link refid="core__logger_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>string</label>
      </node>
      <node id="55">
        <label>fstream</label>
      </node>
      <node id="54">
        <label>ctime</label>
      </node>
      <node id="49">
        <label>core_logger.cpp</label>
        <link refid="core__logger_8cpp"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sstream</label>
      </node>
      <node id="53">
        <label>iostream</label>
      </node>
      <node id="51">
        <label>cstddef</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="core__logger_8cpp_1a192ae3fbc914c80cfaa03dd6f27193d1" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>const string FILENAME</definition>
        <argsstring></argsstring>
        <name>FILENAME</name>
        <initializer>= &quot;log.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="29" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="core__logger_8cpp_1a15bd1f3c8e3cd1104fc4da9c8615aa29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string createCoreTimestamp</definition>
        <argsstring>()</argsstring>
        <name>createCoreTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="31" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="31" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="core__logger_8cpp_1ac6e9c8ea05f4b048046002e3165cc1d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enableCoreLogging</definition>
        <argsstring>()</argsstring>
        <name>enableCoreLogging</name>
        <briefdescription>
<para>Enables core logging service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="46" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="core__logger_8cpp_1a636b0a62a218721454aba83b0e660a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void disableCoreLogging</definition>
        <argsstring>()</argsstring>
        <name>disableCoreLogging</name>
        <briefdescription>
<para>Disables core logging service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="51" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="core__logger_8cpp_1af0b32aeaec588753dc0bd71f1368fb94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeCoreLogger</definition>
        <argsstring>(bool clearLogs)</argsstring>
        <name>initializeCoreLogger</name>
        <param>
          <type>bool</type>
          <declname>clearLogs</declname>
        </param>
        <briefdescription>
<para>Initializes core logger service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clearLogs</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether logs from previous calculations should be cleared. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="56" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="56" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="core__logger_8cpp_1a732c553f6fe407e3fb753a4889954a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeCoreLogger</definition>
        <argsstring>()</argsstring>
        <name>initializeCoreLogger</name>
        <briefdescription>
<para>Initializes core logger service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="74" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="core__logger_8cpp_1aef0eebb7580c3a18d74b90948a8ea00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logCoreMessage</definition>
        <argsstring>(string message)</argsstring>
        <name>logCoreMessage</name>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Puts an information in a log file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><ref refid="core__logger_8h_1af0b32aeaec588753dc0bd71f1368fb94" kindref="member">initializeCoreLogger()</ref> should be called beforehand.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text that should be put in a log file (timestamp will be included automatically). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="79" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="79" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="core__logger_8cpp_1aab51755daf7db1c457f86eb6ea83289c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string toString</definition>
        <argsstring>(double value)</argsstring>
        <name>toString</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Converts double to string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value that needs to be converted to string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value converted to string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="94" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="core__logger_8cpp_1a49e53951909fa3652455abf8394ec3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string planeToString</definition>
        <argsstring>(int value)</argsstring>
        <name>planeToString</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Converts plane number to string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value that needs to be converted to string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value converted to string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="101" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="101" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="core__logger_8cpp_1ae7a67814f8dfbef5ab13b095f7a4912b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string algorithmToString</definition>
        <argsstring>(int value)</argsstring>
        <name>algorithmToString</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Converts algorithm number to string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value that needs to be converted to string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value converted to string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" line="110" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp" bodystart="110" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core__logger_8h" kindref="compound">core_logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>FILENAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;log.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>createCoreTimestamp()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>rawtime;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<sp/>timeinfo;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[80];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time(&amp;rawtime);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeinfo<sp/>=<sp/>localtime(&amp;rawtime);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strftime(buffer,<sp/>80,<sp/></highlight><highlight class="stringliteral">&quot;%d-%m-%Y<sp/>%I:%M:%S&quot;</highlight><highlight class="normal">,<sp/>timeinfo);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str(buffer);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core__logger_8h_1ac6e9c8ea05f4b048046002e3165cc1d4" kindref="member">enableCoreLogging</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CORE_LOGGER_ON<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core__logger_8h_1a636b0a62a218721454aba83b0e660a00" kindref="member">disableCoreLogging</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CORE_LOGGER_ON<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core__logger_8h_1af0b32aeaec588753dc0bd71f1368fb94" kindref="member">initializeCoreLogger</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearLogs)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofstream<sp/>logger;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clearLogs<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.open(FILENAME.c_str(),<sp/>ios::out<sp/>|<sp/>ios::trunc);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.open(FILENAME.c_str(),<sp/>ios::out<sp/>|<sp/>ios::app);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GAMMA<sp/>INDEX<sp/>LOG&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.close();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="core__logger_8h_1ac6e9c8ea05f4b048046002e3165cc1d4" kindref="member">enableCoreLogging</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core__logger_8h_1af0b32aeaec588753dc0bd71f1368fb94" kindref="member">initializeCoreLogger</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="core__logger_8h_1af0b32aeaec588753dc0bd71f1368fb94" kindref="member">initializeCoreLogger</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="core__logger_8h_1a2e305987aefb6f63bc3c9b88f3b6a828" kindref="member">logCoreMessage</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>message)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CORE_LOGGER_ON)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofstream<sp/>logger;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.open(FILENAME.c_str(),<sp/>ios::out<sp/>|<sp/>ios::app);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>+=<sp/>createCoreTimestamp();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>+=<sp/>message;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger<sp/>&lt;&lt;<sp/>entry<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.close();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="core__logger_8h_1a1322edaa172730e0e16162bf85bb7154" kindref="member">toString</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oss.str();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="core__logger_8h_1a8352a6c6ff100179ba1ad70bd70232e0" kindref="member">planeToString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>0<sp/>||<sp/>value<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>planes[3]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;XY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XZ&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;YZ&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>planes[value];</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="core__logger_8h_1a725aa52983f481395eae1d54ae2d018b" kindref="member">algorithmToString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>0<sp/>||<sp/>value<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>algorithms[3]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ClassicSolver&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SpiralSolverRectangle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SpiralSolverWithoutRectangle&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>algorithms[value];</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/core_logger.cpp"/>
  </compounddef>
</doxygen>
