<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="wrapper__logger_8h" kind="file" language="C++">
    <compoundname>wrapper_logger.h</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">string</includes>
    <includedby refid="dicom__reader_8cpp" local="yes">dicom_reader.cpp</includedby>
    <includedby refid="wrapper_8h" local="yes">wrapper.h</includedby>
    <includedby refid="wrapper_8cpp" local="yes">wrapper.cpp</includedby>
    <includedby refid="wrapper__logger_8cpp" local="yes">wrapper_logger.cpp</includedby>
    <incdepgraph>
      <node id="399">
        <label>wrapper_logger.h</label>
        <link refid="wrapper__logger_8h"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
      </node>
      <node id="401">
        <label>string</label>
      </node>
      <node id="400">
        <label>cstddef</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="403">
        <label>wrapper.h</label>
        <link refid="wrapper_8h"/>
      </node>
      <node id="402">
        <label>wrapper_logger.h</label>
        <link refid="wrapper__logger_8h"/>
        <childnode refid="403" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wrapper__logger_8h_1ad5bd5f291d910c016716c1133d85b8c0" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool WRAPPER_LOGGER_ON</definition>
        <argsstring></argsstring>
        <name>WRAPPER_LOGGER_ON</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.h" line="28" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wrapper__logger_8h_1ad00ec71645bc8fa2d756e7f1c66f8a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enableWrapperLogging</definition>
        <argsstring>()</argsstring>
        <name>enableWrapperLogging</name>
        <briefdescription>
<para>Enables wrapper logging service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.h" line="33" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8h_1a47ec9fc2510d2e7d47db4fbabc0bf5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void disableWrapperLogging</definition>
        <argsstring>()</argsstring>
        <name>disableWrapperLogging</name>
        <briefdescription>
<para>Disables wrapper logging service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.h" line="38" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8h_1a036d410fc57766616396f44e84b002eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeWrapperLogger</definition>
        <argsstring>(bool clearLogs)</argsstring>
        <name>initializeWrapperLogger</name>
        <param>
          <type>bool</type>
          <declname>clearLogs</declname>
        </param>
        <briefdescription>
<para>Initializes wrapper logger service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clearLogs</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether logs from previous calculations should be cleared. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.h" line="45" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="52" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8h_1a6a3e76bd4f94ab22d7f330173ebdb0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeWrapperLogger</definition>
        <argsstring>()</argsstring>
        <name>initializeWrapperLogger</name>
        <briefdescription>
<para>Initializes wrapper logger service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.h" line="50" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8h_1aa24e3d85d08869622073a36ebe8bdd43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logWrapperMessage</definition>
        <argsstring>(std::string message)</argsstring>
        <name>logWrapperMessage</name>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Puts an information in a log file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><ref refid="wrapper__logger_8h_1a036d410fc57766616396f44e84b002eb" kindref="member">initializeWrapperLogger()</ref> should be called beforehand.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text that should be put in a log file (timestamp will be included automatically). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.h" line="59" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="75" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="3"><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WRAPPER_LOGGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRAPPER_LOGGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WRAPPER_LOGGER_ON<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1ad00ec71645bc8fa2d756e7f1c66f8a5c" kindref="member">enableWrapperLogging</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1a47ec9fc2510d2e7d47db4fbabc0bf5d1" kindref="member">disableWrapperLogging</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1a036d410fc57766616396f44e84b002eb" kindref="member">initializeWrapperLogger</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearLogs);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1a036d410fc57766616396f44e84b002eb" kindref="member">initializeWrapperLogger</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1aa24e3d85d08869622073a36ebe8bdd43" kindref="member">logWrapperMessage</ref>(std::string<sp/>message);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//WRAPPER_LOGGER_H</highlight></codeline>
    </programlisting>
    <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.h"/>
  </compounddef>
</doxygen>
