<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceyagit_1_1core_1_1math_1_1detail" kind="namespace" language="C++">
    <compoundname>yagit::core::math::detail</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gamma__index_8hpp_1ab16b1a2855c26e43623b7ce2eee8fd47" prot="public" static="no" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t yagit::core::math::detail::splitting_factor</definition>
        <argsstring></argsstring>
        <name>splitting_factor</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="366" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gamma__index_8hpp_1aaa687bf3edad151e8ce14c7dc01efc39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool yagit::core::math::detail::gamma_index_should_split</definition>
        <argsstring>(const data_region&lt; Dimensions &gt; &amp;region)</argsstring>
        <name>gamma_index_should_split</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="31" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a7f9a5be847791308bd3719ece8539130" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_initialize_pass</definition>
        <argsstring>(std::execution::sequenced_policy, view&lt; Type &gt; gamma_index_output, view&lt; Type &gt; gamma_index_output_end)</argsstring>
        <name>gamma_index_initialize_pass</name>
        <param>
          <type>std::execution::sequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="37" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1ac8940268894e2f49139298c529586a32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_initialize_pass</definition>
        <argsstring>(std::execution::unsequenced_policy, view&lt; Type &gt; gamma_index_output, view&lt; Type &gt; gamma_index_output_end)</argsstring>
        <name>gamma_index_initialize_pass</name>
        <param>
          <type>std::execution::unsequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="43" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a2a5fccc5a4cdbec2e0b908fe8b3333d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_initialize_pass</definition>
        <argsstring>(std::execution::parallel_policy, view&lt; Type &gt; gamma_index_output, view&lt; Type &gt; gamma_index_output_end)</argsstring>
        <name>gamma_index_initialize_pass</name>
        <param>
          <type>std::execution::parallel_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="49" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1ae05a713ab88a33a1684f8bd80251c569" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_initialize_pass</definition>
        <argsstring>(std::execution::parallel_unsequenced_policy, view&lt; Type &gt; gamma_index_output, view&lt; Type &gt; gamma_index_output_end)</argsstring>
        <name>gamma_index_initialize_pass</name>
        <param>
          <type>std::execution::parallel_unsequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="55" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a3a01f89ada34c5b212dcb305effe8ac0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_minimize_pass</definition>
        <argsstring>(std::execution::sequenced_policy, view&lt; Type &gt; output, view&lt; Type &gt; output_end, const_view&lt; Type &gt; reference_doses, array&lt; const_view&lt; Type &gt;, Dimensions &gt; reference_coordinates, const_view&lt; Type &gt; target_doses, const_view&lt; Type &gt; target_doses_end, array&lt; const_view&lt; Type &gt;, Dimensions &gt; target_coordinates, const local_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index_minimize_pass</name>
        <param>
          <type>std::execution::sequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output_end</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>reference_coordinates</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses_end</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>target_coordinates</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="61" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="61" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a4a5309c9c1c1e5fc365543877d9939db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_minimize_pass</definition>
        <argsstring>(std::execution::sequenced_policy, view&lt; Type &gt; output, view&lt; Type &gt; output_end, const_view&lt; Type &gt; reference_doses, array&lt; const_view&lt; Type &gt;, Dimensions &gt; reference_coordinates, const_view&lt; Type &gt; target_doses, const_view&lt; Type &gt; target_doses_end, array&lt; const_view&lt; Type &gt;, Dimensions &gt; target_coordinates, const global_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index_minimize_pass</name>
        <param>
          <type>std::execution::sequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output_end</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>reference_coordinates</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses_end</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>target_coordinates</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="80" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="80" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a36827c3c9bc4b4cd9af279fe4d0eab38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_minimize_pass</definition>
        <argsstring>(std::execution::unsequenced_policy, view&lt; Type &gt; output, view&lt; Type &gt; output_end, const_view&lt; Type &gt; reference_doses, array&lt; const_view&lt; Type &gt;, Dimensions &gt; reference_coordinates, const_view&lt; Type &gt; target_doses, const_view&lt; Type &gt; target_doses_end, array&lt; const_view&lt; Type &gt;, Dimensions &gt; target_coordinates, const local_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index_minimize_pass</name>
        <param>
          <type>std::execution::unsequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output_end</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>reference_coordinates</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses_end</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>target_coordinates</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="99" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="99" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1adb1b76528251ff6c6fce1e0d15ccbdc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_minimize_pass</definition>
        <argsstring>(std::execution::unsequenced_policy, view&lt; Type &gt; output, view&lt; Type &gt; output_end, const_view&lt; Type &gt; reference_doses, array&lt; const_view&lt; Type &gt;, Dimensions &gt; reference_coordinates, const_view&lt; Type &gt; target_doses, const_view&lt; Type &gt; target_doses_end, array&lt; const_view&lt; Type &gt;, Dimensions &gt; target_coordinates, const global_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index_minimize_pass</name>
        <param>
          <type>std::execution::unsequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output_end</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>reference_coordinates</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses_end</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>target_coordinates</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="118" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="118" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1ae561b92cba83e17d5cd199c77ddd35c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_minimize_pass</definition>
        <argsstring>(std::execution::parallel_policy, view&lt; Type &gt; output, view&lt; Type &gt; output_end, const_view&lt; Type &gt; reference_doses, array&lt; const_view&lt; Type &gt;, Dimensions &gt; reference_coordinates, const_view&lt; Type &gt; target_doses, const_view&lt; Type &gt; target_doses_end, array&lt; const_view&lt; Type &gt;, Dimensions &gt; target_coordinates, const local_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index_minimize_pass</name>
        <param>
          <type>std::execution::parallel_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output_end</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>reference_coordinates</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses_end</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>target_coordinates</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="137" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="137" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a09fe86b2ca10bef8f742523c17da6b35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_minimize_pass</definition>
        <argsstring>(std::execution::parallel_policy, view&lt; Type &gt; output, view&lt; Type &gt; output_end, const_view&lt; Type &gt; reference_doses, array&lt; const_view&lt; Type &gt;, Dimensions &gt; reference_coordinates, const_view&lt; Type &gt; target_doses, const_view&lt; Type &gt; target_doses_end, array&lt; const_view&lt; Type &gt;, Dimensions &gt; target_coordinates, const global_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index_minimize_pass</name>
        <param>
          <type>std::execution::parallel_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output_end</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>reference_coordinates</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses_end</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>target_coordinates</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="156" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="156" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a28878c18876db5fad952c39bca17c751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_minimize_pass</definition>
        <argsstring>(std::execution::parallel_unsequenced_policy, view&lt; Type &gt; output, view&lt; Type &gt; output_end, const_view&lt; Type &gt; reference_doses, array&lt; const_view&lt; Type &gt;, Dimensions &gt; reference_coordinates, const_view&lt; Type &gt; target_doses, const_view&lt; Type &gt; target_doses_end, array&lt; const_view&lt; Type &gt;, Dimensions &gt; target_coordinates, const local_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index_minimize_pass</name>
        <param>
          <type>std::execution::parallel_unsequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output_end</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>reference_coordinates</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses_end</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>target_coordinates</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="175" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="175" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a937ebfaa4c0cdbd726cc8a52b7751be4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_minimize_pass</definition>
        <argsstring>(std::execution::parallel_unsequenced_policy, view&lt; Type &gt; output, view&lt; Type &gt; output_end, const_view&lt; Type &gt; reference_doses, array&lt; const_view&lt; Type &gt;, Dimensions &gt; reference_coordinates, const_view&lt; Type &gt; target_doses, const_view&lt; Type &gt; target_doses_end, array&lt; const_view&lt; Type &gt;, Dimensions &gt; target_coordinates, const global_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index_minimize_pass</name>
        <param>
          <type>std::execution::parallel_unsequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>output_end</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>reference_coordinates</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const_view&lt; Type &gt;</type>
          <declname>target_doses_end</declname>
        </param>
        <param>
          <type>array&lt; const_view&lt; Type &gt;, Dimensions &gt;</type>
          <declname>target_coordinates</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="194" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="194" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a9336e99b66874a5cab93d21b51a338fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_finalize_pass</definition>
        <argsstring>(std::execution::sequenced_policy, view&lt; Type &gt; gamma_index_output, view&lt; Type &gt; gamma_index_output_end)</argsstring>
        <name>gamma_index_finalize_pass</name>
        <param>
          <type>std::execution::sequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="213" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a1f45ff85090d33919d936a4c7c8423bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_finalize_pass</definition>
        <argsstring>(std::execution::unsequenced_policy, view&lt; Type &gt; gamma_index_output, view&lt; Type &gt; gamma_index_output_end)</argsstring>
        <name>gamma_index_finalize_pass</name>
        <param>
          <type>std::execution::unsequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="219" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a441d2bc4a920366cdb1e7c9edebb4267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_finalize_pass</definition>
        <argsstring>(std::execution::parallel_policy, view&lt; Type &gt; gamma_index_output, view&lt; Type &gt; gamma_index_output_end)</argsstring>
        <name>gamma_index_finalize_pass</name>
        <param>
          <type>std::execution::parallel_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="225" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1aac835518318c0d50344a611dbccc10d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index_finalize_pass</definition>
        <argsstring>(std::execution::parallel_unsequenced_policy, view&lt; Type &gt; gamma_index_output, view&lt; Type &gt; gamma_index_output_end)</argsstring>
        <name>gamma_index_finalize_pass</name>
        <param>
          <type>std::execution::parallel_unsequenced_policy</type>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>view&lt; Type &gt;</type>
          <declname>gamma_index_output_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="231" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a2a4315b19d98ae3e3f42e23839761005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 1 &gt; &amp;gamma_index_output, const image_data&lt; Type, 1 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 1 &gt; &amp;reference_x_coordinates, const image_data&lt; Type, 1 &gt; &amp;target_doses, const image_coordinates&lt; Type, 1 &gt; &amp;target_x_coordinate, const local_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>target_x_coordinate</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="239" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="239" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1aa995c247fb091576c9038171dbf959ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 2 &gt; &amp;gamma_index_output, const image_data&lt; Type, 2 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 2 &gt; &amp;reference_x_coordinates, const image_coordinates&lt; Type, 2 &gt; &amp;reference_y_coordinates, const image_data&lt; Type, 2 &gt; &amp;target_doses, const image_coordinates&lt; Type, 2 &gt; &amp;target_x_coordinate, const image_coordinates&lt; Type, 2 &gt; &amp;target_y_coordinate, const local_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_y_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target_x_coordinate</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target_y_coordinate</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="260" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="260" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a1f91504bbb0a6aee00604a5ac6e47f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 3 &gt; &amp;gamma_index_output, const image_data&lt; Type, 3 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 3 &gt; &amp;reference_x_coordinates, const image_coordinates&lt; Type, 3 &gt; &amp;reference_y_coordinates, const image_coordinates&lt; Type, 3 &gt; &amp;reference_z_coordinates, const image_data&lt; Type, 3 &gt; &amp;target_doses, const image_coordinates&lt; Type, 3 &gt; &amp;target_x_coordinate, const image_coordinates&lt; Type, 3 &gt; &amp;target_y_coordinate, const image_coordinates&lt; Type, 3 &gt; &amp;target_z_coordinate, const local_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_y_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_z_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target_x_coordinate</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target_y_coordinate</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target_z_coordinate</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="281" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="281" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a32a5b2a02bf3bb8c4597d2721ccaca93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 1 &gt; &amp;gamma_index_output, const image_data&lt; Type, 1 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 1 &gt; &amp;reference_x_coordinates, const image_data&lt; Type, 1 &gt; &amp;target_doses, const image_coordinates&lt; Type, 1 &gt; &amp;target_x_coordinate, const global_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>target_x_coordinate</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="302" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="302" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1af2e6a109bc61449d9634e4d5cc9f2573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 2 &gt; &amp;gamma_index_output, const image_data&lt; Type, 2 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 2 &gt; &amp;reference_x_coordinates, const image_coordinates&lt; Type, 2 &gt; &amp;reference_y_coordinates, const image_data&lt; Type, 2 &gt; &amp;target_doses, const image_coordinates&lt; Type, 2 &gt; &amp;target_x_coordinate, const image_coordinates&lt; Type, 2 &gt; &amp;target_y_coordinate, const global_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_y_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target_x_coordinate</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target_y_coordinate</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="323" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="323" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1ac668e2d5705597ec21b6bd6aa22ab685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 3 &gt; &amp;gamma_index_output, const image_data&lt; Type, 3 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 3 &gt; &amp;reference_x_coordinates, const image_coordinates&lt; Type, 3 &gt; &amp;reference_y_coordinates, const image_coordinates&lt; Type, 3 &gt; &amp;reference_z_coordinates, const image_data&lt; Type, 3 &gt; &amp;target_doses, const image_coordinates&lt; Type, 3 &gt; &amp;target_x_coordinate, const image_coordinates&lt; Type, 3 &gt; &amp;target_y_coordinate, const image_coordinates&lt; Type, 3 &gt; &amp;target_z_coordinate, const global_gamma_index_params&lt; Type &gt; &amp;params)</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_y_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_z_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target_x_coordinate</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target_y_coordinate</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target_z_coordinate</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="344" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="344" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a1b9dd0070e897a603da02bb55154fae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; 1 &gt;, splitting_factor &gt;</type>
        <definition>constexpr std::array&lt;data_region&lt;1&gt;, splitting_factor&gt; yagit::core::math::detail::split_region</definition>
        <argsstring>(const data_region&lt; 1 &gt; &amp;current_region)</argsstring>
        <name>split_region</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; 1 &gt; &amp;</type>
          <declname>current_region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="368" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="368" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1ac376a1df661f08f3edd2fe91a8cfa8ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; 2 &gt;, splitting_factor *splitting_factor &gt;</type>
        <definition>constexpr std::array&lt;data_region&lt;2&gt;, splitting_factor * splitting_factor&gt; yagit::core::math::detail::split_region</definition>
        <argsstring>(const data_region&lt; 2 &gt; &amp;current_region)</argsstring>
        <name>split_region</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; 2 &gt; &amp;</type>
          <declname>current_region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="376" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="376" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1adf7f20ca2ce66e4a01584df4545b99c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; 3 &gt;, splitting_factor *splitting_factor *splitting_factor &gt;</type>
        <definition>constexpr std::array&lt;data_region&lt;3&gt;, splitting_factor * splitting_factor * splitting_factor&gt; yagit::core::math::detail::split_region</definition>
        <argsstring>(const data_region&lt; 3 &gt; &amp;current_region)</argsstring>
        <name>split_region</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; 3 &gt; &amp;</type>
          <declname>current_region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="386" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="386" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1afa08640cf6fb5a334653acd4f1a3189b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::error_code</type>
        <definition>std::error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 1 &gt; &amp;gamma_index_output, const image_data&lt; Type, 1 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 1 &gt; &amp;reference_x_coordinates, const irtdose_image_region&lt; Type, 1 &gt; &amp;target, const local_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="402" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="402" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a94d335748d43641f4314efdf9b7df3b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::error_code</type>
        <definition>std::error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 2 &gt; &amp;gamma_index_output, const image_data&lt; Type, 2 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 2 &gt; &amp;reference_x_coordinates, const image_coordinates&lt; Type, 2 &gt; &amp;reference_y_coordinates, const irtdose_image_region&lt; Type, 2 &gt; &amp;target, const local_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_y_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="458" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="458" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a74c19355c8cf54ffe3e62c76ec2a1c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::error_code</type>
        <definition>std::error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 3 &gt; &amp;gamma_index_output, const image_data&lt; Type, 3 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 3 &gt; &amp;reference_x_coordinates, const image_coordinates&lt; Type, 3 &gt; &amp;reference_y_coordinates, const image_coordinates&lt; Type, 3 &gt; &amp;reference_z_coordinates, const irtdose_image_region&lt; Type, 3 &gt; &amp;target, const local_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_y_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_z_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="516" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="516" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a5776049bf3bba45cdd8ff9cf63fb27bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::error_code</type>
        <definition>std::error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 1 &gt; &amp;gamma_index_output, const image_data&lt; Type, 1 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 1 &gt; &amp;reference_x_coordinates, const irtdose_image_region&lt; Type, 1 &gt; &amp;target, const global_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="577" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="577" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a99bb07c8cf0c185228c6c3bb1ed66c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::error_code</type>
        <definition>std::error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 2 &gt; &amp;gamma_index_output, const image_data&lt; Type, 2 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 2 &gt; &amp;reference_x_coordinates, const image_coordinates&lt; Type, 2 &gt; &amp;reference_y_coordinates, const irtdose_image_region&lt; Type, 2 &gt; &amp;target, const global_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference_y_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="633" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="633" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1aad8af16ebe91eca3cc4cf25ee082eb5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::error_code</type>
        <definition>std::error_code yagit::core::math::detail::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, image_data&lt; Type, 3 &gt; &amp;gamma_index_output, const image_data&lt; Type, 3 &gt; &amp;reference_doses, const image_coordinates&lt; Type, 3 &gt; &amp;reference_x_coordinates, const image_coordinates&lt; Type, 3 &gt; &amp;reference_y_coordinates, const image_coordinates&lt; Type, 3 &gt; &amp;reference_z_coordinates, const irtdose_image_region&lt; Type, 3 &gt; &amp;target, const global_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__data" kindref="compound">image_data</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_doses</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_x_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_y_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1image__coordinates" kindref="compound">image_coordinates</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference_z_coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="691" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="691" bodyend="749"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="29" column="1"/>
  </compounddef>
</doxygen>
