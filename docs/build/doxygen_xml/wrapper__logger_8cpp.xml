<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="wrapper__logger_8cpp" kind="file" language="C++">
    <compoundname>wrapper_logger.cpp</compoundname>
    <includes refid="wrapper__logger_8h" local="yes">wrapper_logger.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">chrono</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">fstream</includes>
    <includes local="no">string</includes>
    <includes local="no">ctime</includes>
    <incdepgraph>
      <node id="395">
        <label>iomanip</label>
      </node>
      <node id="390">
        <label>wrapper_logger.h</label>
        <link refid="wrapper__logger_8h"/>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>string</label>
      </node>
      <node id="396">
        <label>fstream</label>
      </node>
      <node id="397">
        <label>ctime</label>
      </node>
      <node id="393">
        <label>iostream</label>
      </node>
      <node id="391">
        <label>cstddef</label>
      </node>
      <node id="394">
        <label>chrono</label>
      </node>
      <node id="389">
        <label>wrapper_logger.cpp</label>
        <link refid="wrapper__logger_8cpp"/>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wrapper__logger_8cpp_1a192ae3fbc914c80cfaa03dd6f27193d1" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>const string FILENAME</definition>
        <argsstring></argsstring>
        <name>FILENAME</name>
        <initializer>= &quot;log.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" line="30" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wrapper__logger_8cpp_1a47f9ffa46b6b7e53960e633df383cd3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string createWrapperTimestamp</definition>
        <argsstring>()</argsstring>
        <name>createWrapperTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" line="32" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="32" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8cpp_1ad00ec71645bc8fa2d756e7f1c66f8a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enableWrapperLogging</definition>
        <argsstring>()</argsstring>
        <name>enableWrapperLogging</name>
        <briefdescription>
<para>Enables wrapper logging service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" line="42" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8cpp_1a47ec9fc2510d2e7d47db4fbabc0bf5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void disableWrapperLogging</definition>
        <argsstring>()</argsstring>
        <name>disableWrapperLogging</name>
        <briefdescription>
<para>Disables wrapper logging service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" line="47" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8cpp_1a036d410fc57766616396f44e84b002eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeWrapperLogger</definition>
        <argsstring>(bool clearLogs)</argsstring>
        <name>initializeWrapperLogger</name>
        <param>
          <type>bool</type>
          <declname>clearLogs</declname>
        </param>
        <briefdescription>
<para>Initializes wrapper logger service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clearLogs</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether logs from previous calculations should be cleared. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" line="52" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="52" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8cpp_1a6a3e76bd4f94ab22d7f330173ebdb0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeWrapperLogger</definition>
        <argsstring>()</argsstring>
        <name>initializeWrapperLogger</name>
        <briefdescription>
<para>Initializes wrapper logger service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" line="70" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="wrapper__logger_8cpp_1a5537b9adc6441620fa3026c08debb284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logWrapperMessage</definition>
        <argsstring>(string message)</argsstring>
        <name>logWrapperMessage</name>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Puts an information in a log file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><ref refid="wrapper__logger_8h_1a036d410fc57766616396f44e84b002eb" kindref="member">initializeWrapperLogger()</ref> should be called beforehand.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Text that should be put in a log file (timestamp will be included automatically). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" line="75" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp" bodystart="75" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>&apos;yet<sp/>Another<sp/>Gamma<sp/>Index<sp/>Tool&apos;;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wrapper__logger_8h" kindref="compound">wrapper_logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>FILENAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;log.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>createWrapperTimestamp()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd_1_1chrono" kindref="compound">std::chrono</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::chrono::time_point&lt;std::chrono::system_clock&gt;<sp/>now<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::time_t<sp/>now_time<sp/>=<sp/>std::chrono::system_clock::to_time_t(now);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::ctime(&amp;now_time);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1ad00ec71645bc8fa2d756e7f1c66f8a5c" kindref="member">enableWrapperLogging</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WRAPPER_LOGGER_ON<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1a47ec9fc2510d2e7d47db4fbabc0bf5d1" kindref="member">disableWrapperLogging</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WRAPPER_LOGGER_ON<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1a036d410fc57766616396f44e84b002eb" kindref="member">initializeWrapperLogger</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearLogs)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofstream<sp/>logger;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clearLogs)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.open(FILENAME.c_str(),<sp/>ios::out<sp/>|<sp/>ios::trunc);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.open(FILENAME.c_str(),<sp/>ios::out<sp/>|<sp/>ios::app);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GAMMA<sp/>INDEX<sp/>LOG&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.close();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wrapper__logger_8h_1ad00ec71645bc8fa2d756e7f1c66f8a5c" kindref="member">enableWrapperLogging</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1a036d410fc57766616396f44e84b002eb" kindref="member">initializeWrapperLogger</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wrapper__logger_8h_1a036d410fc57766616396f44e84b002eb" kindref="member">initializeWrapperLogger</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wrapper__logger_8h_1aa24e3d85d08869622073a36ebe8bdd43" kindref="member">logWrapperMessage</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>message)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WRAPPER_LOGGER_ON)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofstream<sp/>logger;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.open(FILENAME.c_str(),<sp/>ios::out<sp/>|<sp/>ios::app);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>+=<sp/>createWrapperTimestamp();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>+=<sp/>message;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger<sp/>&lt;&lt;<sp/>entry<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.close();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/__w/gi-yagit/gi-yagit/gi_wrapper_cpp/wrapper_logger.cpp"/>
  </compounddef>
</doxygen>
