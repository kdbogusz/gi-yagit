<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceyagit_1_1core_1_1math" kind="namespace" language="C++">
    <compoundname>yagit::core::math</compoundname>
    <innerclass refid="structyagit_1_1core_1_1math_1_1gamma__index__params" prot="public">yagit::core::math::gamma_index_params</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1global__gamma__index__params" prot="public">yagit::core::math::global_gamma_index_params</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1local__gamma__index__params" prot="public">yagit::core::math::local_gamma_index_params</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__gamma__index__implementer" prot="public">yagit::core::math::parallel_gamma_index_implementer</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__gamma__index__implementer_3_01_type_00_011_01_4" prot="public">yagit::core::math::parallel_gamma_index_implementer&lt; Type, 1 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__gamma__index__implementer_3_01_type_00_012_01_4" prot="public">yagit::core::math::parallel_gamma_index_implementer&lt; Type, 2 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__gamma__index__implementer_3_01_type_00_013_01_4" prot="public">yagit::core::math::parallel_gamma_index_implementer&lt; Type, 3 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__unsequenced__gamma__index__implementer" prot="public">yagit::core::math::parallel_unsequenced_gamma_index_implementer</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__unsequenced__gamma__index__implementer_3_01double_00_011_01_4" prot="public">yagit::core::math::parallel_unsequenced_gamma_index_implementer&lt; double, 1 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__unsequenced__gamma__index__implementer_3_01double_00_012_01_4" prot="public">yagit::core::math::parallel_unsequenced_gamma_index_implementer&lt; double, 2 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__unsequenced__gamma__index__implementer_3_01double_00_013_01_4" prot="public">yagit::core::math::parallel_unsequenced_gamma_index_implementer&lt; double, 3 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__unsequenced__gamma__index__implementer_3_01float_00_011_01_4" prot="public">yagit::core::math::parallel_unsequenced_gamma_index_implementer&lt; float, 1 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__unsequenced__gamma__index__implementer_3_01float_00_012_01_4" prot="public">yagit::core::math::parallel_unsequenced_gamma_index_implementer&lt; float, 2 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1parallel__unsequenced__gamma__index__implementer_3_01float_00_013_01_4" prot="public">yagit::core::math::parallel_unsequenced_gamma_index_implementer&lt; float, 3 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1sequenced__gamma__index__implementer" prot="public">yagit::core::math::sequenced_gamma_index_implementer</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1sequenced__gamma__index__implementer_3_01_type_00_011_01_4" prot="public">yagit::core::math::sequenced_gamma_index_implementer&lt; Type, 1 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1sequenced__gamma__index__implementer_3_01_type_00_012_01_4" prot="public">yagit::core::math::sequenced_gamma_index_implementer&lt; Type, 2 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1sequenced__gamma__index__implementer_3_01_type_00_013_01_4" prot="public">yagit::core::math::sequenced_gamma_index_implementer&lt; Type, 3 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1unsequenced__gamma__index__implementer" prot="public">yagit::core::math::unsequenced_gamma_index_implementer</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1unsequenced__gamma__index__implementer_3_01double_00_011_01_4" prot="public">yagit::core::math::unsequenced_gamma_index_implementer&lt; double, 1 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1unsequenced__gamma__index__implementer_3_01double_00_012_01_4" prot="public">yagit::core::math::unsequenced_gamma_index_implementer&lt; double, 2 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1unsequenced__gamma__index__implementer_3_01double_00_013_01_4" prot="public">yagit::core::math::unsequenced_gamma_index_implementer&lt; double, 3 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1unsequenced__gamma__index__implementer_3_01float_00_011_01_4" prot="public">yagit::core::math::unsequenced_gamma_index_implementer&lt; float, 1 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1unsequenced__gamma__index__implementer_3_01float_00_012_01_4" prot="public">yagit::core::math::unsequenced_gamma_index_implementer&lt; float, 2 &gt;</innerclass>
    <innerclass refid="structyagit_1_1core_1_1math_1_1unsequenced__gamma__index__implementer_3_01float_00_013_01_4" prot="public">yagit::core::math::unsequenced_gamma_index_implementer&lt; float, 3 &gt;</innerclass>
    <innernamespace refid="namespaceyagit_1_1core_1_1math_1_1basic">yagit::core::math::basic</innernamespace>
    <innernamespace refid="namespaceyagit_1_1core_1_1math_1_1detail">yagit::core::math::detail</innernamespace>
    <innernamespace refid="namespaceyagit_1_1core_1_1math_1_1vectorized">yagit::core::math::vectorized</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="gamma__index_8hpp_1a76ca8ad357996326c5249cc9c20da7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, iwritable_image_region&lt; Type, 1 &gt; &amp;gamma_index_output, const irtdose_image_region&lt; Type, 1 &gt; &amp;reference, const irtdose_image_region&lt; Type, 1 &gt; &amp;target, const local_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1iwritable__image__region" kindref="compound">iwritable_image_region</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="753" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="753" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a933e3cca8f9a55768820208f59cefa29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, iwritable_image_region&lt; Type, 2 &gt; &amp;gamma_index_output, const irtdose_image_region&lt; Type, 2 &gt; &amp;reference, const irtdose_image_region&lt; Type, 2 &gt; &amp;target, const local_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1iwritable__image__region" kindref="compound">iwritable_image_region</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="821" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="821" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a2819d698546924ef88f7402df2d42b0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, iwritable_image_region&lt; Type, 3 &gt; &amp;gamma_index_output, const irtdose_image_region&lt; Type, 3 &gt; &amp;reference, const irtdose_image_region&lt; Type, 3 &gt; &amp;target, const local_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1iwritable__image__region" kindref="compound">iwritable_image_region</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const local_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="892" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="892" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1affe08722dbd47eaf9866c1b6b8eab040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, iwritable_image_region&lt; Type, 1 &gt; &amp;gamma_index_output, const irtdose_image_region&lt; Type, 1 &gt; &amp;reference, const irtdose_image_region&lt; Type, 1 &gt; &amp;target, const global_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1iwritable__image__region" kindref="compound">iwritable_image_region</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 1 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="966" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="966" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1aa687d772a06dc5d23b0a50a143ffafca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, iwritable_image_region&lt; Type, 2 &gt; &amp;gamma_index_output, const irtdose_image_region&lt; Type, 2 &gt; &amp;reference, const irtdose_image_region&lt; Type, 2 &gt; &amp;target, const global_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1iwritable__image__region" kindref="compound">iwritable_image_region</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 2 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="1034" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="1034" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="gamma__index_8hpp_1a2d8407c1ae38ba263379177091c3b304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionPolicy</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Type&gt;</defval>
          </param>
        </templateparamlist>
        <type>error_code</type>
        <definition>error_code yagit::core::math::gamma_index</definition>
        <argsstring>(ExecutionPolicy policy, iwritable_image_region&lt; Type, 3 &gt; &amp;gamma_index_output, const irtdose_image_region&lt; Type, 3 &gt; &amp;reference, const irtdose_image_region&lt; Type, 3 &gt; &amp;target, const global_gamma_index_params&lt; Type &gt; &amp;params, Allocator allocator=Allocator())</argsstring>
        <name>gamma_index</name>
        <param>
          <type>ExecutionPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classyagit_1_1core_1_1data_1_1iwritable__image__region" kindref="compound">iwritable_image_region</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>gamma_index_output</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>const <ref refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" kindref="compound">irtdose_image_region</ref>&lt; Type, 3 &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const global_gamma_index_params&lt; Type &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>Allocator</type>
          <declname>allocator</declname>
          <defval>Allocator()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" line="1105" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/math/gamma_index.hpp" bodystart="1105" bodyend="1176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef>
</doxygen>
