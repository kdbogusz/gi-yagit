<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_image" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Image</compoundname>
    <derivedcompoundref refid="class_image1_d" prot="public" virt="non-virtual">Image1D</derivedcompoundref>
    <derivedcompoundref refid="class_image2_d" prot="public" virt="non-virtual">Image2D</derivedcompoundref>
    <derivedcompoundref refid="class_image3_d" prot="public" virt="non-virtual">Image3D</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_image_1a32abcd6a6834acfb72fcfffefeff04d2" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Image::start_</definition>
        <argsstring></argsstring>
        <name>start_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="162" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_image_1a322b2901c1d58e24dd18bed40f4e08e0" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Image::spacing_</definition>
        <argsstring></argsstring>
        <name>spacing_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="163" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_image_1a702d7cdf5b661a5224ae3d2e45d6571d" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Image::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="164" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_image_1a5d6108eb995c0f20f87e570e7f414b25" prot="public" static="no" mutable="no">
        <type>vector&lt; vector&lt; double &gt; &gt;</type>
        <definition>vector&lt;vector&lt;double&gt; &gt; Image::coordinates_</definition>
        <argsstring></argsstring>
        <name>coordinates_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="165" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_image_1a7496453efb36b08b2205a4b620532354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Image::Image</definition>
        <argsstring>(vector&lt; double &gt; start, vector&lt; double &gt; spacing)</argsstring>
        <name>Image</name>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Constructs the base for Images - internal representation of dose images. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of coordinates of the center of left top front voxel (in this order). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of distances between centers of adjacent voxels along each axis (x, y and z axis - in this order). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="40" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a0294f63700543e11c0f0da85601c7ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Image::~Image</definition>
        <argsstring>()</argsstring>
        <name>~Image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="42" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.cpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a98c3e4cf3b5426bf197b4579aba7c39f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; double &gt; &amp;</type>
        <definition>const vector&lt; double &gt; &amp; Image::start</definition>
        <argsstring>() const</argsstring>
        <name>start</name>
        <briefdescription>
<para>Returns coordinates of the center of the most left top front voxel (in this order). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of coordinates of the first voxel. Vector size is equal to number of dimensions of the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="50" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.cpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a6c8949631eb3293f9284b653ea6334e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; double &gt; &amp;</type>
        <definition>const vector&lt; double &gt; &amp; Image::spacing</definition>
        <argsstring>() const</argsstring>
        <name>spacing</name>
        <briefdescription>
<para>Returns the distance between centers of adjacent voxels along each axis (x, y and z axis - in this order). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of distances between centers of adjacent voxels along each axis. Vector size is equal to number of dimensions of the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="59" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.cpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a35f203beefc4884964d9f650601c996b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; double &gt; &amp;</type>
        <definition>const vector&lt; double &gt; &amp; Image::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns coordinates of the center of the most right bottom back voxel (in this order). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of coordinates of the last voxel. Vector size is equal to number of dimensions of the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="67" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.cpp" bodystart="36" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a14f1773eb16da222fc22143be1a078e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; vector&lt; double &gt; &gt; &amp;</type>
        <definition>const vector&lt; vector&lt; double &gt; &gt; &amp; Image::coordinates</definition>
        <argsstring>()</argsstring>
        <name>coordinates</name>
        <briefdescription>
<para>List of ascending voxel coordinates along each axis (x, y and z axis - in this order). </para>        </briefdescription>
        <detaileddescription>
<para>Voxels in the images are placed on a grid. Each voxel has an index along each axis. Voxels lying on a perpendicular line to an axis share the same index(and coordinate) along this axis. So for each axis a list can be created of ascending coordinates of voxels along the given axis.</para><para><simplesect kind="return"><para>Vector of vectors of ascending voxel coordinates. Outer vector size is equal to number of dimensions of the image. Inner vectors have lengths according to getReversedShape(). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="80" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.cpp" bodystart="45" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a6717fcaf21fdf0bdc8096a0a358e9059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; vector&lt; int &gt; &gt;</type>
        <definition>vector&lt; vector&lt; int &gt; &gt; Image::getCorresponding</definition>
        <argsstring>(Image &amp;reference)</argsstring>
        <name>getCorresponding</name>
        <param>
          <type>Image &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>List of corresponding indices in the reference image along each axis (x, y and z axis - in this order). </para>        </briefdescription>
        <detaileddescription>
<para>Voxels in the images are placed on a grid. Each voxel has an index along each axis. Voxels lying on a perpendicular line to an axis share the same index(and coordinate) along this axis. Function finds corresponding indices in the reference image, this is: for each axis and for each index i of voxels in this image along given axis index in the reference image that has the closest coordinate to the index i.</para><para><simplesect kind="return"><para>Vector of vectors of corresponding indices in the reference image. Outer vector size is equal to number of dimensions of the image. Inner vectors have lengths according to getReversedShape(). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="96" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.cpp" bodystart="62" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1aaf5ac1f8f7c3120bd3a3809174dc4489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Image::isPointInside</definition>
        <argsstring>(double x, double y=nan(&quot;&quot;), double z=nan(&quot;&quot;))</argsstring>
        <name>isPointInside</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
          <defval>nan(&quot;&quot;)</defval>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
          <defval>nan(&quot;&quot;)</defval>
        </param>
        <briefdescription>
<para>Checks whether point with given coordinates lies inside the image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the query point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) y coordinate of the query point (if the image has 2 or 3 dimensions). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) z coordinate of the query point (if the image has 3 dimensions).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if point lies inside the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="107" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.cpp" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a754a939349d570d677e317776994341c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Image::getNdim</definition>
        <argsstring>() const =0</argsstring>
        <name>getNdim</name>
        <briefdescription>
<para>Number of dimensions of the image. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of dimensions of the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1ad5dc706eb49bd1de115a2bc291a8a31f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Image::getNelems</definition>
        <argsstring>() const =0</argsstring>
        <name>getNelems</name>
        <briefdescription>
<para>Number of voxles in the image. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of voxles in the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a9fdbf526ee3fdef04c330e4c2f5bbdab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Image::getMaxValue</definition>
        <argsstring>() const =0</argsstring>
        <name>getMaxValue</name>
        <briefdescription>
<para>Maximum value of the image. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Maximum value of the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1ac4902e4884957026171fa18789920443" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>vector&lt; int &gt;</type>
        <definition>virtual vector&lt;int&gt; Image::getShape</definition>
        <argsstring>() const =0</argsstring>
        <name>getShape</name>
        <briefdescription>
<para>Shape of the image. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of numbers of voxels along each axis (z, y and x axis - in this order). Vector size is equal to number of dimensions of the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a67467363df1c53918e278870f0814ca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>vector&lt; int &gt;</type>
        <definition>virtual vector&lt;int&gt; Image::getReversedShape</definition>
        <argsstring>() const =0</argsstring>
        <name>getReversedShape</name>
        <briefdescription>
<para>Reversed shape of the image. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of numbers of voxels along each axis (x, y and z axis - in this order). Vector size is equal to number of dimensions of the image. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1a05c89c5725c1b3b8ce9be690d256d096" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Image::print</definition>
        <argsstring>() const =0</argsstring>
        <name>print</name>
        <briefdescription>
<para>Prints the image nicely. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_image_1ab225c9625722c3f861592adb218a168d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double *</type>
        <definition>virtual double* Image::dataToArray</definition>
        <argsstring>() const =0</argsstring>
        <name>dataToArray</name>
        <briefdescription>
<para>Returns image matrix as an linearized (1-dimensional) array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returned array has to be freed by the user.</para></simplesect>
<simplesect kind="return"><para>Linearized array of doubles containing image values. Array size is equal to number of elements of the image (getNelems()). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="159" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" line="31" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/compat/image.h" bodystart="30" bodyend="166"/>
    <listofallmembers>
      <member refid="class_image_1a14f1773eb16da222fc22143be1a078e9" prot="public" virt="non-virtual"><scope>Image</scope><name>coordinates</name></member>
      <member refid="class_image_1a5d6108eb995c0f20f87e570e7f414b25" prot="public" virt="non-virtual"><scope>Image</scope><name>coordinates_</name></member>
      <member refid="class_image_1ab225c9625722c3f861592adb218a168d" prot="public" virt="pure-virtual"><scope>Image</scope><name>dataToArray</name></member>
      <member refid="class_image_1a35f203beefc4884964d9f650601c996b" prot="public" virt="non-virtual"><scope>Image</scope><name>end</name></member>
      <member refid="class_image_1a702d7cdf5b661a5224ae3d2e45d6571d" prot="public" virt="non-virtual"><scope>Image</scope><name>end_</name></member>
      <member refid="class_image_1a6717fcaf21fdf0bdc8096a0a358e9059" prot="public" virt="non-virtual"><scope>Image</scope><name>getCorresponding</name></member>
      <member refid="class_image_1a9fdbf526ee3fdef04c330e4c2f5bbdab" prot="public" virt="pure-virtual"><scope>Image</scope><name>getMaxValue</name></member>
      <member refid="class_image_1a754a939349d570d677e317776994341c" prot="public" virt="pure-virtual"><scope>Image</scope><name>getNdim</name></member>
      <member refid="class_image_1ad5dc706eb49bd1de115a2bc291a8a31f" prot="public" virt="pure-virtual"><scope>Image</scope><name>getNelems</name></member>
      <member refid="class_image_1a67467363df1c53918e278870f0814ca6" prot="public" virt="pure-virtual"><scope>Image</scope><name>getReversedShape</name></member>
      <member refid="class_image_1ac4902e4884957026171fa18789920443" prot="public" virt="pure-virtual"><scope>Image</scope><name>getShape</name></member>
      <member refid="class_image_1a7496453efb36b08b2205a4b620532354" prot="public" virt="non-virtual"><scope>Image</scope><name>Image</name></member>
      <member refid="class_image_1aaf5ac1f8f7c3120bd3a3809174dc4489" prot="public" virt="non-virtual"><scope>Image</scope><name>isPointInside</name></member>
      <member refid="class_image_1a05c89c5725c1b3b8ce9be690d256d096" prot="public" virt="pure-virtual"><scope>Image</scope><name>print</name></member>
      <member refid="class_image_1a6c8949631eb3293f9284b653ea6334e6" prot="public" virt="non-virtual"><scope>Image</scope><name>spacing</name></member>
      <member refid="class_image_1a322b2901c1d58e24dd18bed40f4e08e0" prot="public" virt="non-virtual"><scope>Image</scope><name>spacing_</name></member>
      <member refid="class_image_1a98c3e4cf3b5426bf197b4579aba7c39f" prot="public" virt="non-virtual"><scope>Image</scope><name>start</name></member>
      <member refid="class_image_1a32abcd6a6834acfb72fcfffefeff04d2" prot="public" virt="non-virtual"><scope>Image</scope><name>start_</name></member>
      <member refid="class_image_1a0294f63700543e11c0f0da85601c7ae5" prot="public" virt="virtual"><scope>Image</scope><name>~Image</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
