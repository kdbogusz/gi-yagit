<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceyagit_1_1core_1_1data" kind="namespace" language="C++">
    <compoundname>yagit::core::data</compoundname>
    <innerclass refid="classyagit_1_1core_1_1data_1_1aligned__allocator" prot="public">yagit::core::data::aligned_allocator</innerclass>
    <innerclass refid="structyagit_1_1core_1_1data_1_1allocation__result" prot="public">yagit::core::data::allocation_result</innerclass>
    <innerclass refid="structyagit_1_1core_1_1data_1_1data__format" prot="public">yagit::core::data::data_format</innerclass>
    <innerclass refid="structyagit_1_1core_1_1data_1_1data__region" prot="public">yagit::core::data::data_region</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator" prot="public">yagit::core::data::fast_float_aligned_allocator</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01double_01_4" prot="public">yagit::core::data::fast_float_aligned_allocator&lt; double &gt;</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1fast__float__aligned__allocator_3_01float_01_4" prot="public">yagit::core::data::fast_float_aligned_allocator&lt; float &gt;</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1iimage" prot="public">yagit::core::data::iimage</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1iimage__region" prot="public">yagit::core::data::iimage_region</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1image__coordinates" prot="public">yagit::core::data::image_coordinates</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1image__data" prot="public">yagit::core::data::image_data</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1irtdose__image" prot="public">yagit::core::data::irtdose_image</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1irtdose__image__region" prot="public">yagit::core::data::irtdose_image_region</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1iwritable__image" prot="public">yagit::core::data::iwritable_image</innerclass>
    <innerclass refid="classyagit_1_1core_1_1data_1_1iwritable__image__region" prot="public">yagit::core::data::iwritable_image_region</innerclass>
    <innerclass refid="structyagit_1_1core_1_1data_1_1offsets" prot="public">yagit::core::data::offsets</innerclass>
    <innerclass refid="structyagit_1_1core_1_1data_1_1order__element__t" prot="public">yagit::core::data::order_element_t</innerclass>
    <innerclass refid="structyagit_1_1core_1_1data_1_1sizes" prot="public">yagit::core::data::sizes</innerclass>
    <innernamespace refid="namespaceyagit_1_1core_1_1data_1_1detail">yagit::core::data::detail</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="common_8hpp_1a9884403964bf962beca203960cc2b409" prot="public" static="no" mutable="no">
        <type>constexpr order_element_t</type>
        <definition>constexpr order_element_t yagit::core::data::dim_x</definition>
        <argsstring></argsstring>
        <name>dim_x</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="178" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="common_8hpp_1aa467d6c5c8a7b0850bcc43a4ec9ad184" prot="public" static="no" mutable="no">
        <type>constexpr order_element_t</type>
        <definition>constexpr order_element_t yagit::core::data::dim_y</definition>
        <argsstring></argsstring>
        <name>dim_y</name>
        <initializer>{ 1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="179" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="common_8hpp_1a00f43cdda17f20ae8ca3b11dd1c3342d" prot="public" static="no" mutable="no">
        <type>constexpr order_element_t</type>
        <definition>constexpr order_element_t yagit::core::data::dim_z</definition>
        <argsstring></argsstring>
        <name>dim_z</name>
        <initializer>{ 2 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="180" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="common_8hpp_1a77109373e9024769ab69520ff788613c" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimension</declname>
            <defname>Dimension</defname>
          </param>
        </templateparamlist>
        <type>constexpr order_element_t</type>
        <definition>constexpr order_element_t yagit::core::data::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <initializer>= { Dimension }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="182" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="common_8hpp_1ac681f324bab061c1a85c9f86eb6ce5f9" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt;</type>
        <definition>constexpr data_format&lt;Dimensions&gt; yagit::core::data::cpp_multidimensional_array_format</definition>
        <argsstring></argsstring>
        <name>cpp_multidimensional_array_format</name>
        <initializer>{ detail::make_default_order&lt;Dimensions&gt;(make_index_sequence&lt;Dimensions&gt;()) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="214" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="common_8hpp_1a8d808e64ebd96b8619d602783723c6f2" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt;</type>
        <definition>constexpr data_format&lt;Dimensions&gt; yagit::core::data::default_format</definition>
        <argsstring></argsstring>
        <name>default_format</name>
        <initializer>= cpp_multidimensional_array_format&lt;Dimensions&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="216" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="common_8hpp_1a0574b9515af2b06bd1029878a503fe16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator==</definition>
        <argsstring>(const offsets&lt; Dimensions &gt; &amp;left, const offsets&lt; Dimensions &gt; &amp;right) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1offsets" kindref="compound">offsets</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1offsets" kindref="compound">offsets</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="113" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1acd2d09b07db6ae93c27a73c6db50387e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator!=</definition>
        <argsstring>(const offsets&lt; Dimensions &gt; &amp;left, const offsets&lt; Dimensions &gt; &amp;right) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1offsets" kindref="compound">offsets</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1offsets" kindref="compound">offsets</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="119" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1a63dfa41998de7a175ec2ecda36050693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator==</definition>
        <argsstring>(const sizes&lt; Dimensions &gt; &amp;left, const sizes&lt; Dimensions &gt; &amp;right) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1sizes" kindref="compound">sizes</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1sizes" kindref="compound">sizes</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="135" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1a73d656e97c7bee930c72f6932d878b70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator!=</definition>
        <argsstring>(const sizes&lt; Dimensions &gt; &amp;left, const sizes&lt; Dimensions &gt; &amp;right) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1sizes" kindref="compound">sizes</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1sizes" kindref="compound">sizes</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="141" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1a3aeece8b2fe86d6d3ff3241b0bbfab8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr size_t</type>
        <definition>constexpr size_t yagit::core::data::total_size</definition>
        <argsstring>(const sizes&lt; Dimensions &gt; &amp;size)</argsstring>
        <name>total_size</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1sizes" kindref="compound">sizes</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="147" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1acbc1aa7d0a56fd0f17b4850c1681a512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator==</definition>
        <argsstring>(const data_region&lt; Dimensions &gt; &amp;left, const data_region&lt; Dimensions &gt; &amp;right) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="165" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1a66c6e9d7b638335c5d9f41193822c459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator!=</definition>
        <argsstring>(const data_region&lt; Dimensions &gt; &amp;left, const data_region&lt; Dimensions &gt; &amp;right) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="171" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1a45ceb2bdccba3deb1dd1c79fc82a3635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator==</definition>
        <argsstring>(const order_element_t &amp;left, const order_element_t &amp;right) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const order_element_t &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const order_element_t &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="184" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1a124466370b432d231eb534f152db14e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator!=</definition>
        <argsstring>(const order_element_t &amp;left, const order_element_t &amp;right) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const order_element_t &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const order_element_t &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="189" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1aec93077ab7a41a93ea93afdab7cc71ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator==</definition>
        <argsstring>(const data_format&lt; Dimensions &gt; &amp;left, const data_format&lt; Dimensions &gt; &amp;right) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="219" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="common_8hpp_1af26c66c3796099fc752c584bde913c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool yagit::core::data::operator!=</definition>
        <argsstring>(const data_format&lt; Dimensions &gt; &amp;left, const data_format&lt; Dimensions &gt; &amp;right) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" line="225" column="1" bodyfile="/__w/gi-yagit/gi-yagit/gi_core/include/common.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="image__data_8hpp_1a9b7d2d1785fc8a4e55dde40f9188adad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>yagit::core::data::image_data</definition>
        <argsstring>(shared_ptr&lt; ElementType[]&gt; &amp;&amp;, const data_region&lt; Dimensions &gt; &amp;, const data_format&lt; Dimensions &gt; &amp;, size_t) -&gt; image_data&lt; ElementType, Dimensions &gt;</argsstring>
        <name>image_data</name>
        <param>
          <type>shared_ptr&lt; ElementType[]&gt; &amp;&amp;</type>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/image_data.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="image__coordinates_8hpp_1ab985d4e8efb3e8f79d691eee470ad74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ElementType</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>Dimensions</declname>
            <defname>Dimensions</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>yagit::core::data::image_coordinates</definition>
        <argsstring>(shared_ptr&lt; ElementType[]&gt; &amp;&amp;, const data_region&lt; Dimensions &gt; &amp;, const data_format&lt; Dimensions &gt; &amp;, size_t) -&gt; image_coordinates&lt; ElementType, Dimensions &gt;</argsstring>
        <name>image_coordinates</name>
        <param>
          <type>shared_ptr&lt; ElementType[]&gt; &amp;&amp;</type>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__region" kindref="compound">data_region</ref>&lt; Dimensions &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structyagit_1_1core_1_1data_1_1data__format" kindref="compound">data_format</ref>&lt; Dimensions &gt; &amp;</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/gi-yagit/gi-yagit/gi_core/include/data/image/rtdose/image_coordinates.hpp" line="22" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef>
</doxygen>
